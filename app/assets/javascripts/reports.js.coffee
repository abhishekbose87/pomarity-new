# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

$(document).ready ->

  chartData = generateChartData();
  create_pomodoro_bar_chart(chartData)

create_pomodoro_bar_chart = (chartData)->
  chart = AmCharts.makeChart('pomodoro_bar_chart',
    type: 'stock'
    'theme': 'none'
    'path': '/amchart_images/'
    dataSets: [ {
      fieldMappings: [
        {
          fromField: 'mesitis'
          toField: 'mesitis'
        }
        {
          fromField: 'learning'
          toField: 'learning'
        }
        {
          fromField: 'others'
          toField: 'others'
        }
        {
          fromField: 'clicksome'
          toField: 'clicksome'
        }
      ]
      color: '#7f8da9'
      dataProvider: APP.pomodoro_units
      title: 'West Stock'
      categoryField: 'date'
    } ]
    panels: [
      {
        title: 'Volume'
        percentHeight: 30
        marginTop: 1
        showCategoryAxis: true
        valueAxes: [ {
          dashLength: 5
          stackType: 'regular'
        } ]
        categoryAxis: dashLength: 5
        stockGraphs: [
          {
            type: 'column'
            id: 'g4'
            valueField: 'mesitis'
            fillAlphas: 0.8
            useDataSetColors: false
            title: 'Mesitis'
          }
          {
            type: 'column'
            id: 'g5'
            valueField: 'learning'
            fillAlphas: 0.8
            useDataSetColors: false
            title: 'Learning'
          }
          {
            type: 'column'
            id: 'g6'
            valueField: 'others'
            fillAlphas: 0.8
            useDataSetColors: false
            title: 'Others'
          }
          {
            type: 'column'
            id: 'g7'
            valueField: 'clicksome'
            fillAlphas: 0.8
            useDataSetColors: false
            title: 'Clicksome'
          }
        ]
        stockLegend: periodValueTextRegular: '[[value.close]]'
      }
    ]
    chartScrollbarSettings:
      graph: 'g4'
      graphType: 'line'
      usePeriod: 'WW'
    chartCursorSettings:
      valueLineBalloonEnabled: true
      valueLineEnabled: true
    periodSelector:
      position: 'bottom'
      periods: [
        {
          period: 'DD'
          count: 10
          label: '10 days'
        }
        {
          period: 'MM'
          selected: true
          count: 1
          label: '1 month'
        }
        {
          period: 'YYYY'
          count: 1
          label: '1 year'
        }
        {
          period: 'YTD'
          label: 'YTD'
        }
        {
          period: 'MAX'
          label: 'MAX'
        }
      ]) 
  chart.categoryAxesSettings.maxSeries = 365

generateChartData = ->
  chartData = []
  firstDate = new Date
  firstDate.setHours 0, 0, 0, 0
  firstDate.setDate firstDate.getDate() - 2000
  i = 0
  while i < 2000
    newDate = new Date(firstDate)
    newDate.setDate newDate.getDate() + i
    chartData[i] =
      date: newDate
      volume1: Math.round(Math.random() * (1000 + i)) + 100 + i
      volume2: Math.round(Math.random() * (1000 + i)) + 100 + i
      volume3: Math.round(Math.random() * (1000 + i)) + 100 + i
    i++
  return chartData

# ---
# generated by js2coffee 2.0.4